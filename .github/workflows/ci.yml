name: Go
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  build:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2
    - name: IO Scan
      id: prescription
      uses: synopsys-sig/intelligent-security-scan@master
      with:
        stage: "IO"
        ioServerUrl: ${{secrets.IO_SERVER_URL}}
        ioServerToken: ${{secrets.IO_SERVER_TOKEN}}        
        workflowServerUrl: ${{secrets.WORKFLOW_SERVER_URL}}
        releaseType: "major"
        workflowVersion: "2021.04.3-alpha"
        additionalWorkflowArgs: "--polaris.url=${{secrets.POLARIS_SERVER_URL}} --github.token=${{secrets.GH_ATOKEN}} --polaris.project.name=sig-chakrava/maven --polaris.token=${{secrets.POLARIS_ACCESS_TOKEN}} --jira.auth.token=${{secrets.JIRA_TOKEN}} --sensitive.package.pattern='.*(.xml)' --jira.project.name=DEV --jira.api.url=https://dev-io.atlassian.net --jira.username=chakra.mithun@gmail.com --jira.issues.query=project=DEV --blackduck.project.name=maven:1.0.0 --blackduck.url=https://io-blackduck.dev.polaris.synopsys.com --blackduck.api.token=${{secrets.BLACKDUCK_TOKEN}}"
    
    - name: Static Analysis with Polaris
      if: ${{steps.prescription.outputs.sastScan == 'true'}}
      run: |
        export POLARIS_SERVER_URL=${{secrets.POLARIS_SERVER_URL}}
        export POLARIS_ACCESS_TOKEN=${{secrets.POLARIS_ACCESS_TOKEN}}
        wget -q http://sipse.polaris.synopsys.com/api/tools/polaris_cli-macosx.zip
        unzip -j -o polaris_cli-macosx.zip -d /tmp
        chmod +x /tmp/polaris
        /tmp/polaris analyze -w --coverity-ignore-capture-failure

    - name: Software Composition Analysis with Black Duck
      if: ${{steps.prescription.outputs.scaScan == 'true' }}
      uses: blackducksoftware/github-action@v2
      with:
         args: '--blackduck.url="${{ secrets.BLACKDUCK_URL}}" --blackduck.api.token="${{ secrets.BLACKDUCK_TOKEN}}" --detect.tools="DETECTOR" --blackduck.trust.cert=true'
   
    - name: Synopsys Intelligent Security Scan
      if: ${{steps.prescription.outputs.sastScan == 'true' || steps.prescription.outputs.scaScan == 'true'}}
      uses: synopsys-sig/intelligent-security-scan@master
      with:
        ioServerURL: ${{secrets.IO_SERVER_URL}}
        ioServerToken: ${{secrets.IO_SERVER_TOKEN}}
        workflowServerUrl: ${{secrets.WORKFLOW_SERVER_URL}}
        releaseType: "major"
        workflowVersion: "2021.04.3-alpha"
        additionalWorkflowArgs: "--polaris.url=${{secrets.POLARIS_SERVER_URL}} --polaris.token=${{secrets.POLARIS_ACCESS_TOKEN}} --IS_SAST_ENABLED=${{steps.prescription.outputs.sastScan}} --IS_SCA_ENABLED=${{steps.prescription.outputs.scaScan}} --github.token=${{secrets.GH_ATOKEN}} --polaris.project.name=sig-chakrava/insecure-bank --polaris.token=${{secrets.POLARIS_ACCESS_TOKEN}} --jira.auth.token=${{secrets.JIRA_TOKEN}} --sensitive.package.pattern='.*(.xml)' --jira.project.name=DEV --jira.api.url=https://dev-io.atlassian.net --jira.username=chakra.mithun@gmail.com --jira.issues.query=project=DEV --blackduck.project.name=maven:1.0.0 --blackduck.url=https://io-blackduck.dev.polaris.synopsys.com --blackduck.api.token=${{secrets.BLACKDUCK_TOKEN}}"
        stage: "WORKFLOW"

    - name: Upload SARIF file
      if: ${{steps.prescription.outputs.sastScan == 'true' }}
      uses: github/codeql-action/upload-sarif@v1
      with:
        # Path to SARIF file relative to the root of the repository
        sarif_file: workflowengine-results.sarif.json
